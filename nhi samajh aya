Search Insert Position
#include<iostream>
#include<vector>
using namespace std;

int insertPosition(const vector<int>& arr, int target) {
    int left = 0, right = arr.size() - 1;
    
    // Binary search to find the target or insertion point
    while (left <= right) {
        int mid = left + (right - left) / 2;
        
        if (arr[mid] == target) {
            return mid; // Target found, return its index
        }
        else if (arr[mid] < target) {
            left = mid + 1; // Search in the right half
        }
        else {
            right = mid - 1; // Search in the left half
        }
    }
    
    // If the target is not found, 'left' will be the index where it should be inserted
    return left;
}

int main() {
    // Example sorted array
    vector<int> arr = {1, 3, 5, 6};
    int target = 5;

    // Find the position
    int position = insertPosition(arr, target);
    
    cout << "The target should be inserted at index: " << position << endl;

    return 0;
}
