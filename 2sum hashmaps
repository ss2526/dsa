#include<iostream>
#include<unordered_map>
#include<vector>
using namespace std;
vector<int> twoSum(vector<int>&nums,int target) {
    unordered_map<int,int>umap;
    vector<int> result;
    for (int i=0;i<nums.size(); ++i) { 
       umap[nums[i]]=i;
     
   }
    for(int i=0;i<nums.size();i++) {
        int complement = target -nums[i];
        if(umap.find(complement)!=umap.end()) {
            result.push_back(umap[complement]); 
            result.push_back(i);
        }
        umap[nums[i]] = i;
    }
    return result;
}
 int main() {
  vector<int> nums ={2,6,3,4,8};
  int target =10;
  vector<int> result = twoSum(nums, target);
    
    if (!result.empty()) {
        cout << "Indices: " << result[0] << ", " << result[1] << endl;
    } else {
        cout << "No solution found!" << endl;
    }
    return 0;
}
